plugins {
    id 'com.netflix.conductor.java-application-conventions'
    id 'org.springframework.boot' version '2.7.14'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

    configureEach {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
        exclude group: 'ch.qos.logback', module: 'logback-core'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }
}

version = '3.13.8'

ext {
    conductorVersion = '3.13.8'
    openapiVersion = '1.6.+'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation "org.springdoc:springdoc-openapi-ui:${openapiVersion}"
    runtimeOnly 'org.glassfish.jaxb:jaxb-runtime:2.3.3'

    // Netflix Conductor Dependencies
    implementation "com.netflix.conductor:conductor-rest:${conductorVersion}"
    implementation "com.netflix.conductor:conductor-core:${conductorVersion}"
    implementation "com.netflix.conductor:conductor-common:${conductorVersion}"

    implementation "com.netflix.conductor:conductor-redis-persistence:${conductorVersion}"
    implementation "com.netflix.conductor:conductor-grpc-server:${conductorVersion}"
    implementation "com.netflix.conductor:conductor-redis-lock:${conductorVersion}"
    implementation "com.netflix.conductor:conductor-redis-concurrency-limit:${conductorVersion}"
    implementation "com.netflix.conductor:conductor-http-task:${conductorVersion}"
    implementation "com.netflix.conductor:conductor-json-jq-task:${conductorVersion}"
    implementation project(':mongodb-persistence')
    implementation project(':elasticsearch-persistence')
    implementation project(':rest-api')


//    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

//test {
//    useJUnitPlatform()
//}

application {
    mainClass = 'com.netflix.conductor.ConductorServerApplication'
}
